<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>hunt3ri.github.io - Software Development</title><link href="https://hunt3ri.github.io/" rel="alternate"></link><link href="https://hunt3ri.github.io/feeds/software-development.atom.xml" rel="self"></link><id>https://hunt3ri.github.io/</id><updated>2019-11-20T22:20:00+00:00</updated><entry><title>Faustian Pacts and Software Excellence</title><link href="https://hunt3ri.github.io/faustian-pacts-and-software-excellence.html" rel="alternate"></link><published>2019-11-20T22:20:00+00:00</published><updated>2019-11-20T22:20:00+00:00</updated><author><name>Iain Hunter</name></author><id>tag:hunt3ri.github.io,2019-11-20:/faustian-pacts-and-software-excellence.html</id><summary type="html">&lt;p&gt;I saw this tweet recently and it sparked a few thoughts as it neatly gets to the heart of the biggest challenge in software – getting to done.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I saw this tweet recently and it sparked a few thoughts as it neatly gets to the heart of the biggest challenge in software – getting to done.&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="en" dir="ltr"&gt;P1: Aren&amp;#39;t you ashamed of writing code like this?&lt;br&gt;P2: What do you mean by &amp;quot;this&amp;quot;?&lt;br&gt;P1: Sky-high cyclomatic complexity, inconsistent naming, &amp;amp; duplication.&lt;br&gt;P2: Oh, I thought you meant &amp;quot;profitable&amp;quot;, and the answer is no I&amp;#39;m not ashamed.&lt;/p&gt;&amp;mdash; Kent Beck (@KentBeck) &lt;a href="https://twitter.com/KentBeck/status/1190052930843336704?ref_src=twsrc%5Etfw"&gt;October 31, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;In my experience there is very often a tension on any sizable software project between the desire of the business to get the software in front of customers as quickly as possible and the engineering team’s desire to ensure the code and architecture is of a high enough quality to make refactoring, scaling, testing and addition of new features as easy as possible.  Both desires are equally valid.&lt;/p&gt;
&lt;p&gt;The business needs to expand market share, ship code, have happy customers and get paid.  Possibly by being first to market.  Possibly because commitments and contracts have been signed promising a hard delivery date.&lt;/p&gt;
&lt;p&gt;Equally developers understand the value of flexible architecture, code that is easy to refactor, test and debug.  Further developers know that without these things code becomes harder to work with, meaning quality is hard to ensure, which leads to bugs and delays in delivery and ultimately unhappy customers.&lt;/p&gt;
&lt;p&gt;The tension comes from the assumption on both sides that the other should see their view as perfectly obvious and correct.  Both tribes are worrying about the same thing from a different view point.  Simplistically:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The business worries that if the customer doesn’t get their software, we won’t get paid and we’ll be out of a job&lt;/li&gt;
&lt;li&gt;The dev team worries that if the software isn’t right we’ll be shipping slow buggy software, we won’t get paid and we’ll be out of a job.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It is in the middle of these two tribes and this argument that the senior/lead developer will find themselves.  And it is here that both sides have to communicate and trust each other.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Faust" src="https://hunt3ri.github.io/images/faust-1.jpg#centre"&gt;&lt;/p&gt;
&lt;h2&gt;Communication&lt;/h2&gt;
&lt;p&gt;At the start of the project we could agree (simplistically):&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We must ship this project by June 2020, otherwise we lose the contract to our competitor.  We need to make some pragmatic decisions, take on a certain amount of technical debt.  Once we deliver we won’t promise any major new features until the technical debt is resolved.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Trust&lt;/h2&gt;
&lt;p&gt;Regarding trust.  The business needs to trust the team that they will deliver and make the necessary pragmatic decisions.  The developers need to trust that the business will allow them the necessary space to address the technical debt.&lt;/p&gt;
&lt;h2&gt;Profit&lt;/h2&gt;
&lt;p&gt;Which takes us back to the tweet.  Code that is profitable but with an amount of tech debt is acceptable as long as each side understands the reasons and the trust exists to resolve as/if needed.&lt;/p&gt;
&lt;h2&gt;Faust&lt;/h2&gt;
&lt;p&gt;Unfortunately in many software projects the above turns into a Faustian pact for the dev team.  Reluctantly they allow the technical debt to build up trusting that time will be given to resolve it.  In the meantime the business signs more deals, or demands new features with harder deadlines and the project becomes exactly what the dev team feared - unwieldy, slow and buggy, and stress increases.&lt;/p&gt;
&lt;p&gt;Excellent teams and businesses understand this, and ensure that both deadlines are hit and code quality is high, with time allowed to address technical debt.   In the end it’s only the excellent teams that will succeed.&lt;/p&gt;</content><category term="Software Development"></category></entry><entry><title>Restoring a Postgres database to AWS RDS using Docker</title><link href="https://hunt3ri.github.io/restoring-a-postgres-database-to-aws-rds-using-docker.html" rel="alternate"></link><published>2017-05-23T21:22:00+01:00</published><updated>2017-05-23T21:22:00+01:00</updated><author><name>Iain Hunter</name></author><id>tag:hunt3ri.github.io,2017-05-23:/restoring-a-postgres-database-to-aws-rds-using-docker.html</id><summary type="html">&lt;p&gt;In this post I look at using Docker to restore a Postgres dump file to a Postgres database running in the cloud on AWS RDS.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post I look at using Docker to restore a Postgres dump file to a Postgres database running in the cloud on &lt;a href="https://aws.amazon.com/rds/"&gt;AWS RDS&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Keep it clean&lt;/h2&gt;
&lt;p&gt;One of the big selling points of docker, for me, is that I can have lots of apps and utils running in nice containers on my dev laptop, without having to install them locally.  This ensures my laptop stays nice and responsive and I don’t clutter/break my laptop with lots of weird dependencies and running processes that I’m then too scared to delete.&lt;/p&gt;
&lt;p&gt;Postgres is a good example – I don’t want to install it locally, but I do need access to the command line tools like &lt;a href="https://www.postgresql.org/docs/current/app-psql.html"&gt;psql&lt;/a&gt; and &lt;a href="https://www.postgresql.org/docs/current/app-pgrestore.html"&gt;pg_restore&lt;/a&gt;, to be able to work with my databases effectively.&lt;/p&gt;
&lt;p&gt;One way of accessing these tools would be to ssh onto the AWS cloud instances, but there’s a bunch of reasons most pertinently security (not to mention the faff) why you’d want to avoid that every time you want to run some sql.  So let’s look at how we use Docker to ease the pain instead.&lt;/p&gt;
&lt;h2&gt;Start Me Up&lt;/h2&gt;
&lt;p&gt;With Docker installed you can build this simple Dockerfile to create a local Postgres container.  The User and Password env vars aren’t strictly required, however, if you want to actually connect to the containerised DB, it’s pretty handy&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;FROM&lt;/span&gt; &lt;span class="s"&gt;postgres&lt;/span&gt;

&lt;span class="k"&gt;ENV&lt;/span&gt; POSTGRES_USER postgres
&lt;span class="k"&gt;ENV&lt;/span&gt; POSTGRES_PASSWORD password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;ou can build, run and connect to the container as follows (assumes you are on Mac)&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;  &lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;
  &lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="n"&gt;Dockerfile&lt;/span&gt;   &lt;span class="c1"&gt;# Copy Docker commands listed above into your local Dockerfile&lt;/span&gt;
  &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt; &lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;Users&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;iainhunter&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;dev&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;docker&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;loader&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="mi"&gt;5432&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;5432&lt;/span&gt; &lt;span class="n"&gt;postgres&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;db&lt;/span&gt;
  &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;ps&lt;/span&gt;
  &lt;span class="n"&gt;docker&lt;/span&gt; &lt;span class="n"&gt;exec&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;imageId&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Note line 4 where I map the data-load dir I created at line 1 to a new directory called data-loader inside my container.  This means that when I copy the Postgres dump file into my local data-load directory, it will be available to the postgres tools available in the container.&lt;/p&gt;
&lt;p&gt;Line 6  allows me to connect to the container, swap the imageId  for your locally running containerID.&lt;/p&gt;
&lt;h2&gt;Restoring your database with pg_restore&lt;/h2&gt;
&lt;p&gt;I’ll assume you already have a Postgres database set up within the AWS cloud.  So now we have connected to our container, we can use pg_restore to use restore our dumpfile into AWS (note this command will prompt you for the admin password)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;pg_restore —host&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;youHost&amp;gt;.eu-west-1.rds.amazonaws.com –port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;5432&lt;/span&gt; –username&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;yourAdminUser&amp;gt; –password –dbname&lt;span class="o"&gt;=&lt;/span&gt;&amp;lt;yourDB&amp;gt;  /data-loader/dumpfile.dmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;A note on schemas&lt;/h2&gt;
&lt;p&gt;If you’re doing a partial restore, you may want to restore your dumpfile to a separate schema.  Unfortunately there appears to be no way to do this from the command line.  What you have to do is to rename the public schema, create a new public schema and restore into that, then reverse the process.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/4191653/i-want-to-restore-the-database-with-a-different-schema/16311908#16311908"&gt;This StackOverflow answer outlines the process.&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Restore Complete&lt;/h2&gt;
&lt;p&gt;You should now have a complete restore of your dumpfile in the cloud.  Please add comments if anything is unclear.&lt;/p&gt;</content><category term="Software Development"></category></entry><entry><title>Running Mongo 3.2 in Docker on OSX</title><link href="https://hunt3ri.github.io/running-mongo-32-in-docker-on-osx.html" rel="alternate"></link><published>2016-01-12T21:22:00+00:00</published><updated>2016-01-12T21:22:00+00:00</updated><author><name>Iain Hunter</name></author><id>tag:hunt3ri.github.io,2016-01-12:/running-mongo-32-in-docker-on-osx.html</id><summary type="html">&lt;p&gt;Quick post after smashing my head off the desk for 5 hours trying to understand why I couldn’t get Mongo 3.2 running in a Docker container on my Mac.  Hopefully this post spares others the elastoplasts 🙂&lt;/p&gt;</summary><content type="html">&lt;p&gt;Quick post after smashing my head off the desk for 5 hours trying to understand why I couldn’t get Mongo 3.2 running in a Docker container on my Mac.  Hopefully this post spares others the elastoplasts 🙂&lt;/p&gt;
&lt;p&gt;&lt;img alt="Address Search" src="https://hunt3ri.github.io/images/mongo.png#centre"&gt;&lt;/p&gt;
&lt;h2&gt;Pitfall #1 – Mongo cannot write data to the host OSX machine&lt;/h2&gt;
&lt;p&gt;There are three factors that cause this issue:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A lot of mongo/docker docs tell you to mount a local volume&lt;/li&gt;
&lt;li&gt;By default &lt;a href="https://docs.docker.com/machine/"&gt;docker-machine&lt;/a&gt; uses the virtualbox driver to create a local VM&lt;/li&gt;
&lt;li&gt;Mongo uses &lt;a href="https://en.wikipedia.org/wiki/Mmap"&gt;mmap&lt;/a&gt; to turbo-charge access to files on disk&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These facts led me (by way of this &lt;a href="https://github.com/Parallels/docker-machine-parallels/issues/28"&gt;issue&lt;/a&gt;) to the fact that there’s been an &lt;a href="https://www.virtualbox.org/ticket/819"&gt;ancient known issue&lt;/a&gt; on VirtualBox that basically says docker ain’t going to be able to read/write files with mmap.&lt;/p&gt;
&lt;p&gt;So it’s pointless trying to tell mongo, via docker, to mount a local data volume, as the above bug means mongo isn’t going to be able to access it.  (careful reading of the &lt;a href="https://hub.docker.com/_/mongo/"&gt;Docker Hub mongo docs&lt;/a&gt; may allow you to divine this, but it’s not at all obvious)&lt;/p&gt;
&lt;h2&gt;Solution – Create a data volume in the container rather than the host.&lt;/h2&gt;
&lt;p&gt;Like always once you understand the problem, the solution is simple.  We can tell docker to create a data volume in the container rather than the host, as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker run –name my-local-mongo -v mongo-data:/data/db -p &lt;span class="m"&gt;27017&lt;/span&gt;:27017 -d mongo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In my (still) early days with docker I’d come across these cli commands which contained absolutely no description of WTF all the switches are doing, so a quick breakdown:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;–name my-local-mongo&lt;/strong&gt; – This tells docker to give the container the name “my-local-mongo” rather than generating a name like tuftybeaver&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-v mongo-data:/data/db&lt;/strong&gt; – This is the key switch, here we tell docker to create a new data volume called mongo-data and mount it as /data/db which is the default location mongo wants to write data to&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-p 27017:27017&lt;/strong&gt; – Here we tell docker to bind the container port 27017 to port 27017 on the host vm, allowing us to access docker locally.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt; – This switch tells docker to run the process detached so we’re not running interactively.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If all has gone well docker should be running your mongo container successfully.  A quick &lt;strong&gt;docker ps&lt;/strong&gt; will show your running container.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;docker logs -f my-local-mongo&lt;/strong&gt; – will allow you to follow the log files&lt;/p&gt;
&lt;h2&gt;Pitfall #2 – I can’t connect to mongo from localhost&lt;/h2&gt;
&lt;p&gt;This is the classic docker school boy error, that everyone makes.  The first time you do this you’ll be patting yourself on the back as you type localhost:27017 into your connection string and then wonder why the hell docker isn’t found.&lt;/p&gt;
&lt;p&gt;This is because everything is actually running on your local docker virtual machine.  To find the IP of the VM enter &lt;strong&gt;docker-machine ls&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You should see the URL listed something like this tcp://192.168.99.100:2376 You need to snarf this IP for your connection string.  The easiest way to sanity check that’s it all working is bash it into your browser, eg for this example:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://192.168.99.100:27017"&gt;http://192.168.99.100:27017/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The mongo database should helpfully respond with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;It looks like you are trying to access MongoDB over HTTP on the native driver port.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Demonstrating that your mongo db is running and responding to idiots trying to speak to it over HTTP 🙂&lt;/p&gt;
&lt;h2&gt;Pitfall #3 – No collections are displayed in RoboMongo&lt;/h2&gt;
&lt;p&gt;This was a real head scratcher, I was pretty sure everything was working, and yet &lt;a href="https://robomongo.org/"&gt;RoboMongo&lt;/a&gt; wasn’t showing a damn thing.  This was a classic case of me Sherlock Holmes style spending 2 hours &lt;em&gt;eliminating the impossible, to find whatever remains, however improbable, must be the truth&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;So in a turn up for the books, there was no bug in my code!!  It &lt;a href="https://stackoverflow.com/questions/34462083/cannot-see-collections-in-robomongo-on-windows-10/34462109"&gt;turns out&lt;/a&gt; by default Mongo 3.2 uses the WiredTiger storage engine, and RoboMongo can’t parse data stored in this format.&lt;/p&gt;
&lt;p&gt;So instead if you’re using Mongo 3.2 you should use MongoChef to connect to your db.  &lt;a href="https://studio3t.com/"&gt;MongoChef&lt;/a&gt; will show you all your lovely collections, living within your containerised Mongo.&lt;/p&gt;
&lt;p&gt;Hope the above helps, thanks 🙂&lt;/p&gt;</content><category term="Software Development"></category></entry><entry><title>Achieving Consensus – It’s so funny, how we don’t talk anymore</title><link href="https://hunt3ri.github.io/achieving-consensus-its-so-funny-how-we-dont-talk-anymore.html" rel="alternate"></link><published>2015-12-16T10:20:00+00:00</published><updated>2015-12-16T10:20:00+00:00</updated><author><name>Iain Hunter</name></author><id>tag:hunt3ri.github.io,2015-12-16:/achieving-consensus-its-so-funny-how-we-dont-talk-anymore.html</id><summary type="html">&lt;p&gt;Walk into any office and there can usually be found a surplus of opinion and a dearth of consensus and agreement. While the crowd may be wise, as individuals we all know we’re right and damn any fool who disagrees with us.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Walk into any office and there can usually be found a surplus of opinion and a dearth of consensus and agreement. While the crowd may be wise, as individuals we all know we’re right and damn any fool who disagrees with us.&lt;/p&gt;
&lt;p&gt;A quick perusal of the comments section of any, even moderately controversial post, and you’ll see an echo chamber of hundreds of people carefully explaining why each other’s opinion is completely and hopelessly wrong.&lt;/p&gt;
&lt;p&gt;The rarest phrase on the internet, is – “That’s a compelling argument, you’ve completely changed my mind”&lt;/p&gt;
&lt;p&gt;&lt;img alt="Address Search" src="https://hunt3ri.github.io/images/wrong.png#centre"&gt;&lt;/p&gt;
&lt;p&gt;In fact, the comments sections of most blogs are now so poisonous that the creators of the content, and the majority of its readers, don’t even bother to “Read below the line”.  Worse, people with interesting and unusual opinions are intimidated into not broadcasting them in the first place.&lt;/p&gt;
&lt;p&gt;I’d like to say we can all agree that this is a terrible state of affairs, but as I’ve explained, that’s merely an invitation to be pointed at 100 other blog posts explaining why I’m wrong.&lt;/p&gt;
&lt;p&gt;So all we can say is that opinions are cheap, and getting consensus is the hard part.  For a contemporary example – the recent Paris climate change talks are both simultaneously The &lt;a href="https://www.theguardian.com/environment/2015/dec/13/paris-climate-deal-cop-diplomacy-developing-united-nations"&gt;World’s Greatest Diplomatic Achievement&lt;/a&gt;, and &lt;a href="https://www.theguardian.com/environment/georgemonbiot/2015/dec/12/paris-climate-deal-governments-fossil-fuels"&gt;A Squalid Retrenchment&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Picking battles and getting permission&lt;/h2&gt;
&lt;p&gt;I wanted to write this post, not because I have the answer to generating constructive discussion on the internet (I wish).  But because I think teams and individuals (including myself) struggle on the projects we work on every day – not for want of ability but for want of consensus and clarity on what we want to achieve.&lt;/p&gt;
&lt;p&gt;Because we all instinctively understand the difficulty and energy required to get a group of people to agree on just about anything – the path of least resistance is to avoid the discussion in the first place. Indeed by having the discussion you expose yourself to the risk that your argument will not carry the day, and you’ll be forced down a road you’d prefer not to be on. So it’s easy to understand why tough decisions and “honest” conversations are avoided and “difficult” people worked around.&lt;/p&gt;
&lt;p&gt;The old cliché “Pick your battles” or my personal favourite “Better to ask forgiveness than get permission” are undoubted truisms, but they come with a cost.  By avoiding the battles and not getting the permission, in other words not getting consensus, you can find yourself isolated when you hit the inevitable bumps in the road.  As you’ve neatly provided those excluded from the decision with a convenient scape-goat.  eg – “Well if he’d asked me, of course I’d have told him that was a terrible idea.”&lt;/p&gt;
&lt;p&gt;Or as Sun-Tzu put it more pithily:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;_“Victorious warriors win first and then go to war, while defeated warriors go to war first and then seek to win”&lt;/strong&gt;_ &lt;/p&gt;
&lt;h2&gt;Are you thinking what I’m thinking?&lt;/h2&gt;
&lt;p&gt;I’m certainly not advocating that every decision needs to be ran past the team, but decisions that will impact more than one or two people or that will have a significant impact on what is delivered,  and when it will be delivered, should be discussed as a group.&lt;/p&gt;
&lt;p&gt;Keeping the team and the business involved in the decision making process will cost you time and you’ll inevitably have to slaughter some of your personal sacred cows, to reach an approach everyone can agree on.  However, the prize is worth the pain.&lt;/p&gt;
&lt;p&gt;That prize is a clearly articulated plan that both the team and business believes in and much more importantly – &lt;strong&gt;are invested in&lt;/strong&gt;.  Reason being – because you’ve arrived at the plan as a group, the group should want it to succeed as they all have some some skin in the game.&lt;/p&gt;
&lt;p&gt;The drive and pressure to “Get stuff done” and the small windows many agile methodologies allow for meetings and planning between sprints means it’s easy to skip getting the team bought into the plan and approach. This is a mistake.&lt;/p&gt;
&lt;p&gt;Rather than thinking of getting consensus as an exercise in cost/pain/stress think of it as an extremely valuable deliverable and vital part of leading a team (unfortunately the cost/pain/stress are still there 😉&lt;/p&gt;
&lt;p&gt;In the end it’s just all about talking, and remember to heed Cliff’s warning…&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/GzjX18psf9A" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;</content><category term="Software Development"></category></entry><entry><title>Entrepreneurial Spark – Life’s a pitch</title><link href="https://hunt3ri.github.io/entrepreneurial-spark-lifes-a-pitch.html" rel="alternate"></link><published>2013-08-08T19:33:00+01:00</published><updated>2013-08-08T19:33:00+01:00</updated><author><name>Iain Hunter</name></author><id>tag:hunt3ri.github.io,2013-08-08:/entrepreneurial-spark-lifes-a-pitch.html</id><summary type="html">&lt;p&gt;This week I completed Entrepreneurial Spark’s  Acceler-8 TM Start-up Bootcamp.  Note the trademark.  The trademark implies a confidence, an unwavering certainty, that the program will be successful, globally recognised and copied.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This week I completed &lt;a href="https://www.entrepreneurial-spark.com/"&gt;Entrepreneurial Spark’s&lt;/a&gt;  Acceler-8 TM Start-up Bootcamp.  Note the trademark.  The trademark implies a confidence, an unwavering certainty, that the program will be successful, globally recognised and copied.  A useful metaphor then, for Jim Duffy, and the E-Spark’s team’s, entrepreneurial mindset.&lt;/p&gt;
&lt;p&gt;Entrepreneurial Spark’s proposition is a deceptively simple one.  Teach Scottish start-up business founders to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Think and act “entrepreneurially”.&lt;/li&gt;
&lt;li&gt;Teach them how to pitch their business&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There’s much more on offer than that.  There’s support, advice, networking, access to individuals like Sir Tom Hunter, and Lord Willie Haughey, there’s free office space, everything you need to bootstrap a business.  But it always comes back to entrepreneurship, the pitch and the individual.  Get that right, they say, and success will naturally follow.&lt;/p&gt;
&lt;p&gt;I’ve been involved with E-Spark for around 10 months now.  As a natural cynic and know-it-all I was happy to take Jim’s free office space, I grudgingly attended network events, inwardly cringing as people stumbled through their pitches, but slowly, something started to change – I got it.  Not overnight, not immediately, but I started to see the point.  I saw the change in people and their businesses.  I got what E-Spark were doing.&lt;/p&gt;
&lt;h2&gt;King of the Pitches&lt;/h2&gt;
&lt;p&gt;At E-Spark there is an unrelenting focus on pitching – the Elevator Pitch, the 3 minute pitch, the 10 minute pitch, pitch it and they will come, you get the idea.  But of all of them, the Elevator Pitch is King.&lt;/p&gt;
&lt;p&gt;Initially I railed against the idea that you could boil a business, any business, certainly not our business into a 60 second sound-bite.  But the power of the pitch, it’s evil genius, is to force you to strip out all the fluff and identify and focus on the core central pillar of your business.&lt;/p&gt;
&lt;p&gt;The exercise may make you realise that you don’t have a core, what you thought was important isn’t, it’ll make you understand what makes your business tick and what numbers are important, it will make you realise a dozen things.  But through constant refinement you get to that core central pillar.  Congratulations, you know your business – everything else will flow from there.&lt;/p&gt;
&lt;h2&gt;A fine line between confidence and hubris&lt;/h2&gt;
&lt;p&gt;If there’s a criticism to be levelled at E-Spark it’s that it may lure the unwary into the belief that a slick pitch, and a confident demeanor is enough to get by.  By forcing people out of their comfort zone and to be competitive, there’s a danger that from the outside looking in it appears like an extended episode of the Apprentice.&lt;/p&gt;
&lt;p&gt;There’s been a number of occasions when I wished someone had thought before opening their gob, or acted with a bit more humility.  One particularly unedifying moment, during Bootcamp, had 3 people scrambling for a tenner.  Which led to a spate of people trying to outshine and be noticed more than others.&lt;/p&gt;
&lt;p&gt;Confidence and knowing your business are key, but arrogance and showing off will make you look like a fool in front experienced business people.&lt;/p&gt;
&lt;p&gt;Frequent reference to the &lt;a href="https://hbr.org/2008/02/the-founders-dilemma"&gt;Founder’s Dilemma&lt;/a&gt; – a Hobson’s Choice of Cash versus King was presented as the only possible reasons for starting a business.  I’d argue both are side-effects of success, and believing-in and selling-others-on your vision.&lt;/p&gt;
&lt;p&gt;In the long-run, however, these are minor criticisms regarding what is a truly revolutionary concept and program.  In fairness you’re encouraged to question and disagree with what is being presented.  Additionally the program includes checks and balances in the form of the formidable enablers – who provide advice and guidance to keep you focussed and on track.&lt;/p&gt;
&lt;h2&gt;Winning&lt;/h2&gt;
&lt;p&gt;E-Spark has been inspired by, and modelled on Boston’s &lt;a href="https://www.babson.edu/"&gt;Babson College&lt;/a&gt; and the Mass Challenge program where businesses pitch for a prize fund of $1million.  Incredibly, in less than 18 months the E-Spark team have managed to set-up a similar sized pot of cash and competition in Scotland know as the Edge fund.&lt;/p&gt;
&lt;p&gt;This summer 16 out of 18 winners, of which we were one :-), had come through the E-Spark program.  E-Spark businesses have created more than 50 new jobs, since the program started.  Irrefutable evidence that the program works, and is making a real difference to the Start-Up scene and the economy of Scotland.&lt;/p&gt;
&lt;p&gt;Anyone who is thinking of starting a business is Scotland would be crazy not to join the program.  The support, the energy, the network and the enthusiasm of all involved will get your business soaring.  There’s a mantra that is frequently seen and heard in the office that sums it all up.  If you’re starting a business in Scotland – GoDo at E-Spark.&lt;/p&gt;</content><category term="Software Development"></category></entry></feed>